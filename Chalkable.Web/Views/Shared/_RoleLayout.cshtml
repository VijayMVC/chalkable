@using Chalkable.Web.Common

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"  itemscope itemtype="Education">
<head>
    <title>@ViewBag.Title</title>
    @ChlkHelpers.RenderPageMetadata()
    <meta itemprop="image" content="@Url.Content("~/favicon.ico")">
    <link rel="icon" href="@Url.Content("~/favicon.ico")" />
    <!--Fonts-->
    <link href='https://fonts.googleapis.com/css?family=Reenie+Beanie' rel='stylesheet' type='text/css' />
    <link href='https://fonts.googleapis.com/css?family=Pacifico' rel='stylesheet' type='text/css' />
    <link href='https://fonts.googleapis.com/css?family=Oswald' rel='stylesheet' type='text/css' />
    <!-- Whole Site CSS -->
    <link href="@Url.StaticContent("/Content/screen.css")" rel="stylesheet" media="screen, projection" type="text/css" />
    <link href="@Url.StaticContent("/app/jquery/choosen/chosen.min.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.StaticContent("/app/jquery/datepicker/jquery-ui-1.10.3.custom.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.StaticContent("/app/jquery/snippet/jquery.snippet.min.css")" rel="stylesheet" type="text/css" />
    <!-- Page specific CSS -->
    @RenderSection("Styles", false)
    @if(!Chalkable.Web.Tools.CompilerHelper.IsDebug)
    {
        ChlkHelpers.GoogleAnalytics();
        ChlkHelpers.Olark();
    }
    @ChlkHelpers.RenderSiteRoot(Url)
    <script type="text/javascript" src="@Url.StaticContent("/app/chlk/shared.js")"></script>
    <script type="text/javascript" src="@Url.StaticContent("/app/chlk/chlk-messages.js")"></script>
    <script type="text/javascript" src="@Url.StaticContent("/app/jquery/jquery-2.0.2.min.js")"></script>
    <script type="text/javascript" src="@Url.StaticContent("/app/jquery/jquery.autosize-min.js")"></script>
    <script type="text/javascript" src="@Url.StaticContent("/app/jquery/jquery.autoresize.min.js")"></script>
    <script type="text/javascript" src="@Url.StaticContent("/app/jquery/jquery.scrollTo.js")"></script>
    <script type="text/javascript" src="@Url.StaticContent("/app/jquery/choosen/chosen.jquery.js")"></script>
    <script type="text/javascript" src="@Url.StaticContent("/app/jquery/carousel/jquery.jcarousel.min.js")"></script>
    <script type="text/javascript" src="@Url.StaticContent("/app/jquery/carousel/jquery.carouFredSel-6.2.1-packed.js")"></script>
    <script type="text/javascript" src="@Url.StaticContent("/app/jquery/datepicker/jquery-ui-1.10.3.custom.min.js")"></script>
    <script type="text/javascript" src="@Url.StaticContent("/app/jquery/validation/languages/jquery.validationEngine-en.js")"></script>
    <script type="text/javascript" src="@Url.StaticContent("/app/jquery/validation/jquery.validationEngine.js")"></script>
    <script type="text/javascript" src="@Url.StaticContent("/app/jquery/snippet/jquery.snippet.min.js")"></script>
    <script type="text/javascript" src="@Url.StaticContent("/app/jquery/jquery.validate.min.js")"></script>
    <script type="text/javascript" src="@Url.StaticContent("/app/highcharts/highcharts.js")"></script>
    <script type="text/javascript" src="@Url.StaticContent("/app/api/chlk-post-message-api.js")"></script>
    <script type="text/javascript" src="@Url.StaticContent("/app/jquery/jquery.signaturepad.min.js")"></script>
    <script type="text/javascript" src="@Url.StaticContent("/app/jquery/jquery.menu-aim.js")"></script>
    <script type="text/javascript" src="@Url.StaticContent("/app/jquery/jquery.quicksand.js")"></script>
        

</head>
    <body>
        <div id="fb-root"></div>
        <input type="hidden" value=" ServerTime :  @ViewData.GetValueOrNull("CurrentServerDateTime")"/>
        <input type="hidden" value=" ServerDbTime:  @ViewData.GetValueOrNull("CurrentServerDBDateTime")"/>

        <div id="page-header">
            Revision: @Chalkable.Web.Tools.CompilerHelper.Version
        </div>

        <div id="logout-block">
            @Html.ActionLink("Go to INOW", "RedirectToINow", "User", null, new {style = "visibility: hidden;"})
        </div>
   

        @{
            var isDeveloper = (ViewData.ContainsKey(ViewConstants.IS_DEV) && (bool)ViewData[ViewConstants.IS_DEV]);
            var isDemoSchool = !string.IsNullOrEmpty((string)ViewData.GetValueOrNull(ViewConstants.DEMO_PREFIX_KEY));
        }
        
        

    

        <div class="page 
        @if (isDemoSchool || isDeveloper)
        {
            @:demo
        }
        ">
            <div id="sidebar"></div>
            <div id="content">
                <div class="ribbon"></div>
                <div id="content-wrapper">
                    <div id="main-top">
                    </div>
                    <div id="main-wrapper">
                        <div id="main">
                            @RenderBody()
                       
                        </div>
                        <div id = "chlk-dialogs" class = "x-hidden"></div>
                    </div>
                    @ChlkHelpers.RenderChlkCopyrightYear()
                </div>
            </div>
            
            
        </div>
        @if (isDemoSchool || isDeveloper)
        {
            <div id="demo-footer" class="top">
            @if (isDeveloper)
            {
                <div id="dev-apps-list"></div>
            }
            else
            {
                <div id="fb">
                    <h>Don't be shy</h>
                    <div class="fb-like" data-href="https://chalkable.com" data-layout="button_count" data-send="true" data-width="55" data-show-faces="true"></div>
                    <a id="principal"></a>
                </div>
                    <div class="border demo-end"></div>
                    <div class="demo-end">
                        <h>Demo</h>
                        <div id="demo-end-container"></div>
                    </div>
                <div class="border"></div>
                <div>
                    <h>Sign up</h>
                    <div id="demo-sign-up-container"></div>
                </div>
            }

            <div class="border"></div>
            <div id="roles-buttons">
                @if (isDeveloper)
                {
                    <a class="demo-role-button" rolename="Developer"><span><div class="mark left"></div><div class="mark right"></div>Developer</span></a
                >}<a class="demo-role-button" rolename="Student"><span><div class="mark left"></div><div class="mark right"></div>Student</span></a
                ><a class="demo-role-button" rolename="Teacher"><span><div class="mark left"></div><div class="mark right"></div>Teacher</span></a
                ><a class="demo-role-button" rolename="AdminGrade"><span><div class="mark left"></div><div class="mark right"></div>Admin</span></a
                ><a class="demo-role-button coming" rolename="Parent"><span><span></span><div class="mark left"></div><div class="mark right"></div>Parent</span></a
                ><a class="demo-role-button coming" rolename="District"><span><span></span><div class="mark left"></div><div class="mark right"></div>District</span></a>
            </div>
            </div>
        }
        <div id = "chlk-overlay" class ="x-hidden"></div>
        <div id="chlk-pop-up-container" class="x-hidden">
            <div id="pop-up-triangle"></div>
        </div>
        <div class="chlk-tooltip" id="chlk-tooltip-item">
            <div class="tooltip-content"></div>
            <div class="tooltip-triangle"></div>
        </div>
        @RenderSection("MixPanelTracking", false)
        
<script type="text/json" id="application-value" class="valuable-script">
    @Html.Raw(@ViewData.GetValueOrNull(ViewConstants.DEFAULT_APPLICATION))
</script>

    <script type="text/json" id="applications-value" class="valuable-script">
    @Html.Raw(@ViewData.GetValueOrNull(ViewConstants.APPLICATIONS))
</script>

        <script type="text/javascript">
            var values = document.getElementsByClassName('valuable-script'), value, name;
            var len = values.length;
            for (var i = 0; i < len; i++) {
                value = values[i];
                if (value.text.trim()) {
                    name = value.getAttribute('id').split('-')[0];
                    window[name] = JSON.parse(value.text).data;
                }
            }
        </script>
        
        <script type="text/javascript">


            var isGuidValid = function(value) {
                var validGuid = /^({|()?[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}(}|))?$/;
                var emptyGuid = /^({|()?0{8}-(0{4}-){3}0{12}(}|))?$/;

                return validGuid.test(value) && !emptyGuid.test(value);
            };
            
            var isValidGuidList = function(value) {
                if (!value) 
                    return false;

                var guids = (value || "").split(',') || [];
                var cnt = 0;
                for(var i = 0; i < guids.length; ++i) {
                    if (isGuidValid(guids[i])) ++cnt;
                }
                return cnt == guids.length;
            };

            jQuery.validator.addMethod("guid", function(value, element) {
                return isGuidValid(value);
            },  'Please select a valid and non empty Guid value.');
            
            jQuery.validator.addMethod("guidlist", function(value, element) {
                return isValidGuidList(value);
                
            }, 'Please select one or more(coma separated) valid Guid value.');
        </script>

        <script type="text/javascript">
        
            function parseJsonToObj(json){
                return json ? JSON.parse(HtmlEncode(json)).data : null;
            }
            function parseJsonToArray(json){
                return parseJsonToObj(json) || [];
            }

            var school = parseJsonToObj('@ViewData.GetValueOrNull(ViewConstants.SCHOOL)'); 
            var newNotifications = parseInt('@ViewData.GetValueOrNull(ViewConstants.UNSHOWN_NOTIFICATIONS_COUNT)', 10) || 0;
            var azurePictureUrl = '@ViewData.GetValueOrNull(ViewConstants.AZURE_PICTURE_URL)';

            var USER_ROLE_EXT = '@ViewData.GetValueOrNull("Rolename")';
            var currentSchoolYearId = '@ViewData.GetValueOrNull("CurrentSchoolYearId")';
            var currentChlkPerson = parseJsonToObj('@ViewData.GetValueOrNull(ViewConstants.CURRENT_PERSON)');
            var classesToFilter = parseJsonToArray('@ViewData.GetValueOrNull(ViewConstants.CLASSES)');
            var classesAdvancedData = parseJsonToArray('@ViewData.GetValueOrNull(ViewConstants.CLASSES_ADV_DATA)');
            var scriptsRoot = '@Chalkable.Web.Tools.CompilerHelper.ScriptsRoot';
            var classesInfo = {};
            classesAdvancedData && classesAdvancedData.forEach(function (el) {
                classesInfo[el.classid] = {
                    mask: el.mask,
                    typesByClass: el.typesbyclass
                };
            });

            var markingPeriod =  parseJsonToObj('@ViewData.GetValueOrNull(ViewConstants.MARKING_PERIOD)');
            var nextMarkingPeriod = parseJsonToObj('@ViewData.GetValueOrNull(ViewConstants.NEXT_MARKING_PERIOD)'); 
            var finalizedClassesIds = parseJsonToArray('@ViewData.GetValueOrNull(ViewConstants.FINALIZED_CLASSES_IDS)'); 
            var attendanceReasons = parseJsonToArray('@ViewData.GetValueOrNull(ViewConstants.ATTENDANCE_REASONS)');
            var gradeLevels = parseJsonToArray('@ViewData.GetValueOrNull(ViewConstants.GRADE_LEVELS)');
            var userClaims = parseJsonToArray('@ViewData.GetValueOrNull(ViewConstants.USER_CLAIMS)');
        </script>
    
    @if (Chalkable.Web.Tools.CompilerHelper.IsDebug)
    {
        <script src="@Url.Content("~/app/ria/_bootstrap.js")" type="text/javascript">
            ria.__CFG = {
                "prettyStackTraces": true,
                "checkedMode": true,
                "enablePipelineMethodCall": true,
                "AssertWithExceptions": false,
                "stackTraceJs": "lib/stacktrace.js",

                "#require": {
                    "plugins": ["~/assets/jade.js"],
                    "appCodeDir": "~/app/",
                    "appRoot": "@Url.Content("~")",
                    "libs": {
                    }
                },

                "#mvc": @RenderSection("MVCSettings", false)
            }
        </script>
    }
    else
    {
        <script type="text/javascript">
            var role = currentChlkPerson.role.name;
            if (role.toLowerCase() == "admingrade" || role.toLowerCase() == "adminview" || role.toLowerCase() == "adminedit")
                role = "Admin";
            var roleAppScript = '@Chalkable.Web.Tools.CompilerHelper.ScriptsRoot' + '/app/' + role + 'App.compiled.js';
            (function(appUrl) {
                var scr = document.createElement('script');
                scr.setAttribute('type', 'text/javascript');
                scr.src = appUrl;
                
                var cfgObject = {
                    "prettyStackTraces": false,
                    "checkedMode": false,
                    "enablePipelineMethodCall": false,
                    "AssertWithExceptions": true,
                    "#mvc": @RenderSection("MVCSettings", false)
                };

                cfgObject = JSON.stringify(cfgObject);
                scr.innerHTML = "ria.__CFG = " + cfgObject;
                document.getElementsByTagName('head').item(0).appendChild(scr);
            })(roleAppScript);
        </script>
    }
    
    @RenderSection("BottomScripts", false)
    
    
    
    </body> 
</html>