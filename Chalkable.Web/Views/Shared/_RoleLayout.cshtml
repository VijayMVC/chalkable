@using Chalkable.Common
@using Chalkable.Web.Common
@using Chalkable.Web.Models.PersonViewDatas

@{
    var isDeveloperSchool = (ViewData.ContainsKey(ViewConstants.IS_DEV) && (bool)ViewData[ViewConstants.IS_DEV]);
    var isDemoSchool = (ViewData.ContainsKey(ViewConstants.IS_DEMO_DISTRICT) && (bool)ViewData[ViewConstants.IS_DEMO_DISTRICT]);
    var demoSchoolPictureDistrictRef = ViewData.GetJsConstantValueOrNull(ViewConstants.DEMO_PICTURE_DISTRICT_REF);

}

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"  itemscope itemtype="Education">
<head>
    <title>@ViewBag.Title</title>
    @ChlkHelpers.RenderPageMetadata()
    <meta itemprop="image" content="@Url.Content("~/favicon.ico")">
    <link rel="icon" href="@Url.Content("~/favicon.ico")" />
    <!--Fonts-->
    <link href='https://fonts.googleapis.com/css?family=Reenie+Beanie' rel='stylesheet' type='text/css' />
    <link href='https://fonts.googleapis.com/css?family=Pacifico' rel='stylesheet' type='text/css' />
    <link href='https://fonts.googleapis.com/css?family=Oswald' rel='stylesheet' type='text/css' />
    <link href='https://fonts.googleapis.com/css?family=Open+Sans' rel='stylesheet' type='text/css'>
    <!-- Whole Site CSS -->
    <link href="@Url.StaticContent("/Content/" + ViewData[ViewConstants.ROLE_NAME] + ".css")" rel="stylesheet" media="screen, projection" type="text/css" />
@if (isDemoSchool || isDeveloperSchool)
{
    <link href="@Url.StaticContent("/Content/demo.css")" rel="stylesheet" media="screen, projection" type="text/css" />
}
    <link href='//fonts.googleapis.com/css?family=Open+Sans:300italic,400italic,300,600,400,700' rel='stylesheet' type='text/css'>
    <link href="@Url.StaticContent("/app/jquery/choosen/chosen.min.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.StaticContent("/app/jquery/smoothness/jquery-ui.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.StaticContent("/app/jquery/snippet/jquery.snippet.min.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.StaticContent("/app/chlk/index/prettify.css")" type="text/css" rel="stylesheet" />

    <!-- Page specific CSS -->
    @RenderSection("Styles", false)
    @if (!Chalkable.Web.Tools.CompilerHelper.IsDebug)
    {
        ChlkHelpers.GoogleAnalytics();
        ChlkHelpers.Olark();
    }
    @ChlkHelpers.RenderSiteRoot(Url)
    
    @{Html.RenderPartial("Telemetry");}
    <script type="text/javascript" src="@Url.StaticContent("/app/lib/es5-shim.min.js")"></script>
    <script type="text/javascript" src="@Url.StaticContent("/app/chlk/shared.js")"></script>
    <script type="text/javascript" src="@Url.StaticContent("/app/chlk/chlk-messages.js")"></script>
    <script type="text/javascript" src="@Url.StaticContent("/app/chlk/chlk-constants.js")"></script>
    <script type="text/javascript" src="@Url.StaticContent("/app/lib/date-en-US.js")"></script>
    <script type="text/javascript" src="@Url.StaticContent("/app/jquery/jquery-1.11.1.min.js")"></script>
    <script type="text/javascript" src="@Url.StaticContent("/app/jquery/jquery.autosize-min.js")"></script>
    <script type="text/javascript" src="@Url.StaticContent("/app/jquery/jquery.autoresize.min.js")"></script>
    <script type="text/javascript" src="@Url.StaticContent("/app/jquery/jquery.scrollTo.js")"></script>
    <script type="text/javascript" src="@Url.StaticContent("/app/jquery/choosen/chosen.jquery.js")"></script>
    <script type="text/javascript" src="@Url.StaticContent("/app/jquery/carousel/jquery.jcarousel.min.js")"></script>
    <script type="text/javascript" src="@Url.StaticContent("/app/jquery/carousel/jquery.carouFredSel-6.2.1-packed.js")"></script>
    <script type="text/javascript" src="@Url.StaticContent("/app/jquery/jquery-ui.min.js")"></script>
    <script type="text/javascript" src="@Url.StaticContent("/app/jquery/validation/languages/jquery.validationEngine-en.js")"></script>
    <script type="text/javascript" src="@Url.StaticContent("/app/jquery/validation/jquery.validationEngine.js")"></script>
    <script type="text/javascript" src="@Url.StaticContent("/app/jquery/snippet/jquery.snippet.min.js")"></script>
    <script type="text/javascript" src="@Url.StaticContent("/app/jquery/jquery.validate.min.js")"></script>
    <script type="text/javascript" src="@Url.StaticContent("/app/highcharts/highcharts.js")"></script>
    <script type="text/javascript" src="~/Scripts/api/chlk-post-message-api.js"></script>
    <script type="text/javascript" src="@Url.StaticContent("/app/jquery/jquery.signaturepad.min.js")"></script>
    <script type="text/javascript" src="@Url.StaticContent("/app/jquery/jquery.menu-aim.js")"></script>
    <script type="text/javascript" src="@Url.StaticContent("/app/jquery/jquery.quicksand.js")"></script>
    <script type="text/javascript" src="@Url.StaticContent("/app/jquery/validation/jquery.creditCardValidator.js")"></script>
    <script type="text/javascript" src="@Url.StaticContent("/app/jquery/jquery.maskedinput-1.3.1.min.js")"></script>
    <script type="text/javascript" src="@Url.StaticContent("/app/chlk/index/prettify.js")"></script>
    <script type="text/javascript" src="@Url.StaticContent("/app/jquery/jquery.youtube.js")"></script>

</head>
<body class ="@ViewData[ViewConstants.ROLE_NAME]">
        <div id="fb-root"></div>
        <!--
            ServerTime :  @ViewData["CurrentServerDateTime"]
            ServerDbTime :  @ViewData["CurrentServerDBDateTime"]
    
            Revision: @Chalkable.Web.Tools.CompilerHelper.Version <br/>
            @if (!isDemoSchool)
            {
                @:Last Sync Date : @ViewData[ViewConstants.LAST_SYNC_DATE]
            }
            --> 
                                      
        <div id="page">
            <header class="@(!isDemoSchool && !isDeveloperSchool?"has-inow-link":"")"></header>
        
            <div id="classes-bar-holder"></div>

            <div id="content" class="loading @(isDemoSchool||isDeveloperSchool?"demo":"")">
                <div id="sidebar"></div
                ><div id="main">@RenderBody()</div>
            </div>
            
            
            @ChlkHelpers.RenderChlkCopyrightYear()
        </div>
        
        @if (isDemoSchool || isDeveloperSchool)
        {
            var currentRoleId = (int)ViewData[ViewConstants.CURRENT_USER_ROLE_ID];
            var isDeveloper = currentRoleId == CoreRoles.DEVELOPER_ROLE.Id;
            var isTeacher = currentRoleId == CoreRoles.TEACHER_ROLE.Id;
            var isStudent = currentRoleId == CoreRoles.STUDENT_ROLE.Id;
                
            <div id="demo-footer" class="top">
                <div id="roles-buttons">
                    @if (isDeveloperSchool)
                    {
                        <button data-rolename="Developer">Developer</button>
                    }
                    <button class="@(isTeacher?"pressed":"")" data-rolename="Teacher">Teacher</button>
                    <button class="@(isStudent?"pressed":"")" data-rolename="Student">Student</button>
                    <button class="coming" data-tooltip="Coming soom">Admin</button>
                    <button class="coming" data-tooltip="Coming soom">Parent</button>
                    <button class="coming" data-tooltip="Coming soom">District</button>
                </div>
            </div>
        }
        <div id = "first-login-overlay"></div>
        <div id="chlk-dialogs" class="x-hidden">
            <div id="chlk-overlay" class="x-hidden"></div>
        </div>

        <!--<a id="first-login-video" href="https://www.youtube.com/watch?v=sDdfBOYpduU"></a>
        <input id="first-login-input" />-->
        <div id="chlk-pop-up-container" class="x-hidden">
            <div id="pop-up-triangle"></div>
        </div>
        <div class="chlk-tooltip" id="chlk-tooltip-item">
            <div class="tooltip-content"></div>
            <div class="tooltip-triangle"></div>
        </div>
        <div class="alerts-pop-up popup-bubble"></div>
        @RenderSection("MixPanelTracking", false)
        
<script type="text/json" id="application-value" class="valuable-script">
    @Html.Raw(@ViewData[ViewConstants.DEFAULT_APPLICATION])
</script>

    <script type="text/json" id="applications-value" class="valuable-script">
    @Html.Raw(@ViewData[ViewConstants.APPLICATIONS])
</script>

        <script type="text/javascript">
            (function($) {
                $('.valuable-script').each(function() {
                    if (!/^\s*$/.test(this.text || '')) {
                        var name = $(this).attr('id').split('-')[0];
                        window[name] = JSON.parse($(this).text()).data;
                    }
                });
            }(jQuery));
        </script>
        
        <script type="text/javascript">


            var isGuidValid = function(value) {
                var validGuid = /^({|()?[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}(}|))?$/;
                var emptyGuid = /^({|()?0{8}-(0{4}-){3}0{12}(}|))?$/;

                return validGuid.test(value) && !emptyGuid.test(value);
            };
            
            var isValidGuidList = function(value) {
                if (!value) 
                    return false;

                var guids = (value || "").split(',') || [];
                var cnt = 0;
                for(var i = 0; i < guids.length; ++i) {
                    if (isGuidValid(guids[i])) ++cnt;
                }
                return cnt == guids.length;
            };

            var isValidIntList = function(value) {
                if (!value) 
                    return false;

                var ints = (value || "").split(',') || [];
                var cnt = 0;
                for(var i = 0; i < ints.length; ++i) {
                    if (jQuery.isNumeric(ints[i])) ++cnt;
                }
                return cnt == ints.length;
            };

            
            function chlkPrice(field, rules, i, options){
                var value = field.val();
                var digits = value.split('.')[1];
                var result = false;
                if (digits !== undefined) {
                    if (digits.length > 2) {
                        var newValue = parseInt(value, 10) + '.' + digits.slice(0, 2);
                        if (parseFloat(value, 10) == newValue) {
                            digits = digits.slice(0, 2);
                            field.val(newValue);
                        }
                    }

                    switch (digits) {
                    case '00':
                    case '25':
                    case '50':
                    case '75':
                        result = true;
                        break;
                    case '0':
                    case '5':
                        {
                            field.val(field.val() + '0');
                            result = true;
                        }
                        break;
                    case '':
                        {
                            field.val(field.val() + '00');
                            result = true;
                        }
                        break;
                    }
                }
                if (!result && parseInt(value, 10) != value)
                    return "Whole numbers or .25 increments";
            }

            jQuery.validator.addMethod("guid", function(value, element) {
                return isGuidValid(value);
            },  'Please select a valid and non empty Guid value.');
            
            jQuery.validator.addMethod("guidlist", function(value, element) {
                return isValidGuidList(value);
                
            }, 'Please select one or more(coma separated) valid Guid values.');

            jQuery.validator.addMethod("intlist", function(value, element) {
                return isValidIntList(value);
                
            }, 'Please select one or more(coma separated) valid integer values.');
        </script>

        <script type="text/javascript">
            function getObj(json){
                return json ? json.data : null;
            }
            function getArray(json){
                return getObj(json) || [];
            }

            var notificationsInterval;
            var school = getObj(@ViewData.GetJsJsonObjectOrNull(ViewConstants.SCHOOL));
            var schoolOptions = getObj(@ViewData.GetJsJsonObjectOrNull(ViewConstants.SCHOOL_OPTIONS));
            var newNotifications = parseInt(@ViewData.GetJsConstantValueOrNull(ViewConstants.UNSHOWN_NOTIFICATIONS_COUNT), 10) || 0;
            var azurePictureUrl = @ViewData.GetJsConstantValueOrNull(ViewConstants.AZURE_PICTURE_URL);
            var demoAzurePictureUrl = @ViewData.GetJsConstantValueOrNull(ViewConstants.DEMO_AZURE_PICTURE_URL);

            var USER_ROLE_EXT = @ViewData.GetJsConstantValueOrNull("Rolename");
            var currentSchoolYearId = @ViewData.GetJsConstantValueOrNull(ViewConstants.CURR_SCHOOL_YEAR_ID);
            var serverTime = @ViewData.GetJsConstantValueOrNull(ViewConstants.SERVER_TIME);
            var clientTime = new Date();
            var schoolYearServerTime = @ViewData.GetJsConstantValueOrNull(ViewConstants.SCHOOL_YEAR_SERVER_TIME);
            var currentChlkPerson = getObj(@ViewData.GetJsJsonObjectOrNull(ViewConstants.CURRENT_PERSON));
            var classesToFilter = getArray(@ViewData.GetJsJsonObjectOrNull(ViewConstants.CLASSES));
            var classesAdvancedData = getArray(@ViewData.GetJsJsonObjectOrNull(ViewConstants.CLASSES_ADV_DATA));
            var scriptsRoot = '@Chalkable.Web.Tools.CompilerHelper.ScriptsRoot';
            var classesInfo = {};
            classesAdvancedData && classesAdvancedData.forEach(function (el) {
                classesInfo[el.classid] = {
                    mask: el.mask,
                    typesByClass: el.typesbyclass,
                    alphaGrades: el.alphagrades,
                    alphaGradesForStandards: el.alphagradesforstandards
                };
            });

            var markingPeriod =  getObj(@ViewData.GetJsJsonObjectOrNull(ViewConstants.MARKING_PERIOD));
            var markingPeriods =  getArray(@ViewData.GetJsJsonObjectOrNull(ViewConstants.MARKING_PERIODS));
            var gradingPeriod = getObj(@ViewData.GetJsJsonObjectOrNull(ViewConstants.GRADING_PERIOD));
            var finalizedClassesIds = getArray(@ViewData.GetJsJsonObjectOrNull(ViewConstants.FINALIZED_CLASSES_IDS)); 
            var attendanceReasons = getArray(@ViewData.GetJsJsonObjectOrNull(ViewConstants.ATTENDANCE_REASONS));
            var gradeLevels = getArray(@ViewData.GetJsJsonObjectOrNull(ViewConstants.GRADE_LEVELS));
            var userClaims = getArray(@ViewData.GetJsJsonObjectOrNull(ViewConstants.USER_CLAIMS));
            var alphaGrades = getArray(@ViewData.GetJsJsonObjectOrNull(ViewConstants.ALPHA_GRADES));
            var alternateScores = getArray(@ViewData.GetJsJsonObjectOrNull(ViewConstants.ALTERNATE_SCORES));
            var gradingComments = getArray(@ViewData.GetJsJsonObjectOrNull(ViewConstants.GRADING_COMMMENTS));
            var announcementAttributes = getArray(@ViewData.GetJsJsonObjectOrNull(ViewConstants.ANNOUNCEMENT_ATTRIBUTES));
            var studyCenterEnabled = '@ViewData.GetJsConstantValueOrNull(ViewConstants.STUDY_CENTER_ENABLED)';
            var leParams = getObj(@ViewData.GetJsJsonObjectOrNull(ViewConstants.LE_PARAMS));
            var messagingDisabled = '@ViewData.GetJsConstantValueOrNull(ViewConstants.MESSAGIN_DISABLED)';
            
            var DEMO_SCHOOL = @isDemoSchool.ToString().ToLowerInvariant();
            var DEMO_SCHOOL_PICTURE_DISTRICT = @demoSchoolPictureDistrictRef;
            var districtId = @ViewData.GetJsConstantValueOrNull(ViewConstants.DISTRICT_ID) || '';
            var redirectUrl = @ViewData.GetJsConstantValueOrNull(ViewConstants.REDIRECT_URL_KEY) || '';
            var schoolYear = getObj(@ViewData.GetJsJsonObjectOrNull(ViewConstants.SCHOOL_YEAR));
            
        </script>
    
    @if (Chalkable.Web.Tools.CompilerHelper.IsDebug)
    {
        <script src="@Chalkable.Web.Tools.CompilerHelper.ScriptsRoot/app/ria/_bootstrap.js" type="text/javascript">
            ria.__CFG = {
                "prettyStackTraces": true,
                "checkedMode": true,
                "enablePipelineMethodCall": true,
                "AssertWithExceptions": false,
                "stackTraceJs": "lib/stacktrace.js",

                "#require": {
                    "plugins": ["~/assets/jade.js"],
                    "appRoot": "@Chalkable.Web.Tools.CompilerHelper.ScriptsRoot/",
                    "libs": {
                    }
                },

                "#mvc": @RenderSection("MVCSettings", false)
            }
        </script>
    }
    else
    {
        <script type="text/javascript">
            var role = currentChlkPerson.role.name;
            var roleAppScript = '@Chalkable.Web.Tools.CompilerHelper.ScriptsRoot' + '/app/' + role + 'App.compiled.js';
            (function(appUrl) {
                var scr = document.createElement('script');
                scr.setAttribute('type', 'text/javascript');
                scr.src = appUrl;
                
                var cfgObject = {
                    "prettyStackTraces": false,
                    "checkedMode": false,
                    "enablePipelineMethodCall": false,
                    "AssertWithExceptions": true,
                    "#mvc": @RenderSection("MVCSettings", false)
                };

                cfgObject = JSON.stringify(cfgObject);
                $(scr).text("ria.__CFG = " + cfgObject);
                document.getElementsByTagName('head').item(0).appendChild(scr);
            })(roleAppScript);
        </script>
    }
    @ChlkHelpers.MixPanel() 
    @RenderSection("BottomScripts", false)
    
    
    
    </body> 
</html>