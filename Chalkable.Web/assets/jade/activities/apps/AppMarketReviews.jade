app = self
appRating = app.getApplicationRating()

if !self.userRole.isStudent()
    BUTTON.write-review-btn.right Write a review
    .rating-large
        span.review-link User Rating:
        +Rating("appRating", appRating.getAverage(), false).all
    .add-review.x-hidden
        +ActionForm('appmarket', 'writeReview')#submit-review-form
            +Hidden('appId', app.getId().valueOf())
            .review-area
                textarea(class="validate[required]").review-text(placeholder="Write a review", name="reviewText")
                .review-container
                    +Rating('newRating', 0, true)
                    .rating-hint
            .btns
                +Button()(type="submit", class="special-button blue-button submit-review-btn") Submit
                //span.cancel-btn Cancel

.user-reviews
    .rating-roles.x-hidden
        each item in appRating.getRoleRatings()
            .rating-role-item
                -var role = item.getRole()
                .rolename=role.getName()
                .app-rating
                    +Rating('role-' + role.getName(), item.getRating())
                    .personcount=item.getPersonCount()

    .rating-persons
        each item in appRating.getPersonRatings()
            .rating-person-item
                -var person = item.getPerson()
                .role-avatar.teacher
                .chat-bubble
                    h3= person.getFullName()
                    p!= self.linkify(item.getReview())
                .rate-container
                    +Rating('person-rating-' + person.getId().valueOf(), item.getRating())

