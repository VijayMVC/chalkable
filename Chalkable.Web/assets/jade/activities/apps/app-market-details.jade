app = self.getApp()
devName = app.getDeveloperInfo().getName()
webSiteLink = app.getDeveloperInfo().getWebSite()

.app-market-details
    if self.currentBalance
        .user-balance= "$" + self.currentBalance
    h2.page-title= app.getName()
    .action-bar
        .items
            -console.log(self.isStudyCenterEnabled())
            +ActionLink('appmarket', 'myApps')(class= !self.isStudyCenterEnabled() ? 'disabled' : '').my-apps.toolbar-btn My Apps
            +ActionLink('appmarket', 'list').app-store.toolbar-btn.pressed App Store
    .fixed-width
        .app-screenshots-panel
            +Carousel()
                -videoUrl = app.getVideoDemoUrl() || ''
                if videoUrl
                    +CarouselItem().img(data-page = 1)
                        -dims = chlk.models.apps.AppPicture.SCREENSHOT_DIMS()
                        +Video(true)(src=videoUrl, width=dims.width, height=dims.height)
                each picture, index in app.getScreenshotPictures().getItems()
                    +CarouselItem().img(data-page= index + 2)
                        img(src=picture.getPictureUrl())
        .app-price-info
            .right
                if self.isStudyCenterEnabled()
                    b= self.installBtnTitle
                    | &nbsp;
                    +ActionButton('appmarket', 'tryToInstall', app.getId()).blue-button.mid-button(class=self.isInstalled()? "installed" : undefined) Install App
            .app-title
                span By&nbsp;
                a(href=webSiteLink, target="blank").dev-web-site=devName


        +CloseOpen('Info')
            .content
                .table.app-info-details
                    .app-description= self.linkify(app.getDescription())
                    .side-panel
                        span.review-link User Ratings
                        +Rating("appRating", app.getApplicationRating().getAverage(), false).all


        +CloseOpen('Reviews')
            .content
                .reviews
                    +RenderWith(app, chlk.templates.apps.AppMarketReviewsTpl)(userRole = self.userRole)

        +CloseOpen('App Features')
            .content.table.permissions
                .row
                    .group-header.first This app is for:
                    .items
                        each validRole in app.getValidRoles()
                            .permission
                                .icon(class=self.getRoleTypeClass(validRole.getId()))
                                .description=validRole.getName()
                .row
                    .group-header Info used:
                    .items
                        if app.getPermissions().length
                            each permission in app.getPermissions()
                                .permission
                                    .icon(class=self.getPermissionTypeClass(permission.getId().valueOf()))
                                    .description=permission.getName()
                        else
                            .permission
                                .description None
                .row
                    .group-header.first Works on:
                    .items
                        each platform in app.getPlatforms()
                            .permission
                                .icon(class=self.getPlatformTypeClass(platform.getId().valueOf()))
                                .description=platform.getName()
        // if admin
        if false
            .ban-app
                +RenderWith(app, chlk.templates.apps.AppMarketBanTpl)