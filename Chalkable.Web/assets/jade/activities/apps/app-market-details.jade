mixin Rating(elemId, value, isEditable)
    fieldset.rating(class = isEditable ? "editable" : undefined)(attributes)
        items = [5, 4, 3, 2, 1]
        each item in items
            input(
                type = "radio",
                id = "#{elemId + item}",
                value = item,
                name = elemId,
                disabled = !isEditable ? "disabled" : undefined,
                checked = value == item ? "checked" : undefined
                )
            label(for="#{elemId + item}")

app = self.getApp()
devName = app.getDeveloperInfo().getName()
webSiteLink = app.getDeveloperInfo().getWebSite()
appRating = app.getApplicationRating()

.app-market-details
    +AppMarketToolbar(self.currentBalance, self.categories, self.gradeLevels)
    .app-screenshots-panel
        +Carousel(app.getScreenshotPictures().getItems())
    .app-price-info
        .app-title
            h1=app.getName()
            span="by "
            a(href = webSiteLink).dev-web-site=devName
        .app-buy
            +ActionLinkButton('appmarket', 'tryToInstall', app.getId()).special-button.blue-button=self.installBtnTitle

        textarea(name = "app-description", class ="app-description", readonly)=app.getDescription()
        .app-general-info
            .reviews
                a.review-link User Ratings
                +Rating("appRating", appRating.getAverage(), false).all
                a.write-review-btn Write a review
                .add-review.x-hidden
                    +ActionForm('appmarket', 'writeReview')#submit-review-form
                        .review-area
                            textarea.review-text(placeholder="Write a review", name="reviewText")
                            .review-container
                                +Rating('newRating', 0, true)
                                .rating-hint
                        .btns
                            +Button()(type="button", class="special-button blue-button submit-review-btn") Submit
                            span.cancel-btn Cancel


                .user-reviews
                    .rating-roles.x-hidden
                        each role in appRating.getRoleRatings()
                            .rating-role-item
                                .rolename=role.getRoleName()
                                .app-raiting
                                   +Rating('role-' + role.getRoleName(), role.getRating())
                                .personcount=role.getPersonCount()
                    .rating-persons
                        each person in appRating.getPersonRatings()
                            .rating-person-item
                                p=person.getReview() + ' - ' + person.getRoleName()
                                +Rating('person-rating-' + person.getSchoolPersonId.valueOf(), person.getRating())
            .permissions
                .permissions-group
                    .group-header.first This app is for:
                    each validRole in app.getValidRoles()
                        .permission
                            .icon(class=self.getRoleTypeClass(validRole.getId()))
                            .description=validRole.getName()
                .permissions-group.last
                    .group-header Info this app uses:
                    each permission in app.getPermissions()
                        .permission
                            .icon(class=self.getPermissionTypeClass(permission.getId().valueOf()))
                            .description=permission.getName()





