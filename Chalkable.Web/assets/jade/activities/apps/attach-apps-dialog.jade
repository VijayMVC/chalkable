mixin AppIconLink_(announcementId, app, needToInstall, iconTooltip, announcementType)
    -var appId = app.getId().valueOf()
    .announcement-item.application(data-tooltip=iconTooltip)
        .wrapper
            +LoadingImage(src=app.getBannerPictureUrl(), id="loading-image-" + appId)
            .title(data-tooltip=app.getName(), data-tooltip-type="overflow")= app.getName()
            .shortdesc= app.getShortDescription()
            if needToInstall
                +ActionButton('appmarket', 'details', app.getId(), true) Install
            else
                +ActionButton('apps', 'tryToAttachFromAnnouncement', announcementId, appId, announcementType, self.getAppUrlAppend()) Attach

mixin FileAttachBlock_(title, announcementId, announcementType, assignedAttributeId)
    .announcement-item.application(data-tooltip=title, data-tooltip-type="overflow")
        .wrapper
            .attach-file.img
            .title(data-tooltip=title, data-tooltip-type="overflow")= title
            .shortdesc
            div.simple-gray-button.download-link.file=title
                +FileUpload('announcement', 'uploadAttachmentOnCreate', [announcementId, announcementType, assignedAttributeId])#add-file-attachment.simple-gray-button


mixin FileCabinetBlock_(title, announcementId, announcementType, assignedAttributeId)
    .announcement-item.application
        .wrapper
            .file-cabinet.img
            div(data-tooltip=title, data-tooltip-type="overflow").title=title
            .shortdesc
            +ActionButton('announcement', 'fileCabinet', announcementId, announcementType, assignedAttributeId)#add-file-from-cabinet.simple-gray-button=title


mixin AttributeBlock_(title, announcementId, announcementType)
    .announcement-item.application
        .wrapper
            .attach-attribute.img
            div(data-tooltip=title, data-tooltip-type="overflow").title=title
            .shortdesc
            +ActionButton('announcement', 'addAttribute', announcementId, announcementType)=title

mixin StandardBlock_(title, announcementId, classId, announcementTypeName)
    .announcement-item.application
        .wrapper
            .attach-standard.img
            div(data-tooltip=title, data-tooltip-type="overflow").title=title
            .shortdesc
            +ActionButton('announcement', 'showStandards', announcementTypeName, announcementId, classId)=title

mixin AssessmentBlock_(title, announcementId, assessmentAppId, announcementType)
    .announcement-item.application
        .wrapper
            .attach-assessment.img
            div(data-tooltip=title, data-tooltip-type="overflow").title=title
            .shortdesc
            +ActionButton('apps', 'tryToAttachFromAnnouncement', announcementId, assessmentAppId, announcementType)#add-assesment.simple-gray-button=title

announcementId = self.getAnnouncementId() && self.getAnnouncementId().valueOf()
classId = self.getClassId() && self.getClassId().valueOf()
announcementTypeName = self.getAnnouncementTypeName() || ''
announcementType = self.getAnnouncementType()

.dialog.chlk-attach-dialog
    .x-window-header
        h1 Attach application
        a.close.close-btn
    .attach-content
        +AttachDialogSidebar(self, 'apps')
        .attach-main
            .attachments-and-applications
                if self.getUserRole().isAdmin()
                    each app in self.apps.getItems()
                        +AppIconLink_(announcementId, app, false, null, announcementType)
                else
                    each app in self.apps.getItems()
                        +AppIconLink_(announcementId, app, app.needToInstall(), self.getAppIconToolTip(app), announcementType)

                .paging
                    +Paginator2('announcement', 'attachApps', self.apps, [announcementId, classId, self.getAppUrlAppend(),
                        self.getAssessmentAppId(), self.isStandardAttachEnabled(), announcementTypeName, announcementType])
