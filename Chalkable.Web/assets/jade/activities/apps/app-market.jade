mixin AppIconLink(app)
    appId = app.getId().valueOf()
    +ActionLink('appmarket', 'details', appId).app-icon-link
        .app-list-item
            .icon
                pictureUrl = self.getPictureURL(app.getSmallPictureId(), 74, 74)
                img(src=pictureUrl)
            .description
                .name=app.getName()
                .shortdesc=app.getShortDescription()

.app-market
    +AppMarketToolbar(self.currentBalance, self.categories, self.gradeLevels)
    .app-screenshots-panel
        +Carousel()
            each picture in self.getFirstApp().getScreenshotPictures().getItems()
                +CarouselItem().img
                    img(src=picture.getPictureUrl())
    +ActionForm('appmarket', 'list')#app-market-filter
        .app-filter
            .subject
                .subject-filter
                    .title.btn Subject
                    .items.x-hidden
                        +Hidden('selectedCategories', self.getAllCategoriesIds(self.categories))
                        +LabeledCheckbox('All Categories', 'app-category-all', true, false)
                        each subject in self.categories
                           +LabeledCheckbox(subject.getName(), 'app-category-' + subject.getId().valueOf(), false, false)

            .price
                .price-type.all.btn(data-price-type=chlk.models.apps.AppPriceType.ALL.valueOf()).pressed All
                .price-type.paid.btn(data-price-type=chlk.models.apps.AppPriceType.PAID.valueOf()) Paid
                .price-type.free.btn(data-price-type=chlk.models.apps.AppPriceType.FREE.valueOf()) Free
                +Hidden('priceType', chlk.models.apps.AppPriceType.ALL.valueOf())

            .sort
                span Sorted By:
                +Select('sortingMode')#app-sort-type
                    +Option(chlk.models.apps.AppSortingMode.POPULAR.valueOf(), 'Popular', true)
                    +Option(chlk.models.apps.AppSortingMode.NEWEST.valueOf(), 'Newest')
                    +Option(chlk.models.apps.AppSortingMode.HIGHEST_RATED.valueOf(), 'Highest Rated')
            .app-grade-levels
                +RangeSlider("gradeLevels", "gradeLevels", 1, 12)
    .apps
        +RenderWith(self.getModel(), chlk.templates.apps.AppMarketAppsTpl)