normalValue = self.getModel().getNormalValue()
+ActionForm('announcement', 'updateAnnouncementGradeFromGrid')(
    data-able-drop=self.isAbleDropStudentScore()
).grading-form
    +Hidden('comment', self.getComment())(
        data-comment = self.getComment()
    ).comment-value
    +Hidden('id', self.getId())
    +Hidden('announcementid', self.getAnnouncementId())
    +Hidden('studentid', self.getStudentId())
    input(value=normalValue, name="gradevalue", data-grade-value=self.getGradeValue()).grade-autocomplete.value-input
    .grading-input-popup
        .popup-content
            if self.isAbleDropStudentScore() || self.isDropped()
                +LabeledCheckbox(Msg.Drop, 'dropped', self.isDropped())(data-value=self.isDropped(), addCallBack = true, class = self.isAbleDropStudentScore() ? '' : 'cant-drop').with-value.dropped-checkbox
            else
                +Hidden('dropped', self.isDropped()).dropped-hidden
            +LabeledCheckbox(Msg.Late, 'islate', self.isLate())(data-value=self.isLate(), addCallBack = true).with-value
            +LabeledCheckbox(Msg.Incomplete, 'isincomplete', self.isIncomplete())(data-value=self.isIncomplete(), addCallBack = true).with-value
            if self.isAbleExemptStudentScore()
                +LabeledCheckbox(Msg.Exempt, 'isexempt', self.isExempt())(data-value=self.isExempt(), addCallBack = true).with-value.exempt-checkbox
            else
                +Hidden('isexempt', self.isExempt())
            +Hidden('isabsent', self.isAbsent())
            +LabeledCheckbox(Msg.Fill, 'fill', false, (self.getGradeValue() === "" || self.getGradeValue() === null))(addCallBack = true, containerClass = "fill-grade-container").fill-grade