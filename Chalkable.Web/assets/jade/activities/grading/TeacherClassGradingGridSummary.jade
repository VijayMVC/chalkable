.class-grading
    topData = self.getTopData()
    topItems = topData.getTopItems()
    selectedId = topData.getSelectedItemId()
    +LeftRightToolbar(topItems, chlk.templates.classes.TopBar, 'grading', 'summaryGrid')(
        selectedItemId=selectedId
    ).classes-bar
    .autocomplete-list
    .action-bar.not-transparent
        .container.panel-bg
            .left.no-border
                .small-grey-buttons-block
                    +ActionLink('grading', 'summary', selectedId)(data-tooltip=Msg.Box(true)).no-action-link-styles.small-grey-button.boxes
                    +ActionLink('grading', 'summaryGrid', selectedId)(data-tooltip=Msg.Grid).no-action-link-styles.small-grey-button.grid.pressed
    .mps-container
        .chlk-pop-up-container.popup-top.comment
            .pop-up-triangle
            div
                h5=Msg.Add_comment
                .text-container
                    textarea.comment-value
                a(href="javascript:").grey-button.small.cancel-comment=Msg.Cancel
                a(href="javascript:").blue-button.small.add-comment.right=Msg.Add
        each item,i in self.getItems()
            div(class=(i==0) ? "open" : "", data-index=i).marking-period-container
                div(data-tooltip=(item.getAvg() != null ? Msg.Avg + " " + item.getAvg() : 'No grades yet')).mp-title=Msg.Marking_Period + ' ' +  item.getMarkingPeriod().getName()
                    a(href="javascript:").grey-button.comment-button=Msg.Comment
                    .collapse
                .mp-data
                    .ann-types-container
                        +LeftRightToolbar()(
                            needDots = true,
                            roundedDots = true,
                            padding = 150
                        )
                            .dotted-container.name-container.with-horizontal-dots
                                .type-name=Msg.Student(true)
                                each student,i in item.getStudents()
                                    div(row-index=i).student-name
                                        .dotted-h=student.getStudentInfo().getDisplayName()
                            .dotted-container.avg-container.with-horizontal-dots
                                .type-name #{Msg.Avg}.
                                each student,i in item.getStudents()
                                    div(row-index=i).dotted-h.avg=student.getAvg()
                            each announcement in item.getAnnouncements()
                                .dotted-container.grade-container.with-horizontal-dots
                                    .type-name=announcement.getAnnouncementTypeName()
                                    each info,i in announcement.getStudentAnnouncements().getItems()
                                        normalValue = self.getNormalValue(info)
                                        div(row-index=i, class=(parseInt(normalValue, 10) ? '' : 'letter')).dotted-h.grade-value=normalValue
                                            cls = self.getAlertClass(info)
                                            if cls
                                                div(class=cls, data-tooltip=self.getTooltipText(info)).alert-flag
                                            if info.getComment()
                                                .with-comment
                                            .edit-cell
                                            +ActionForm('announcement', 'updateAnnouncementGradeFromGrid')
                                                input(type="submit").x-hidden
                                                +Hidden('cmment', info.getComment())(
                                                    data-comment = info.getComment()
                                                ).comment-value
                                                +Hidden('id', info.getId())
                                                +Hidden('announcementId', info.getAnnouncementId())
                                                +Hidden('dropped', info.isDropped())
                                                +Hidden('exempt', info.isExempt())
                                                +Hidden('late', info.isLate())
                                                +Hidden('absent', info.isAbsent())
                                                +Hidden('incomplete', info.isIncomplete())
                                                +Hidden('passed', info.isPassed())
                                                +Hidden('complete', info.isComplete())
                                                input(value=normalValue, name="gradevalue").grade-autocomplete