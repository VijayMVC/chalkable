.grading-summary-grid.grades-page
    #grading-popup.grading-input-popup.popup-bubble.no-triangle
    -var topData = self.getTopData()
    -var selectedId = topData.getSelectedItemId()

    h2.page-title=Msg.Grade(true)

    +ClassesToolBarWithAll(topData, 'grading', 'summaryGrid', null, null, null)

    .autocomplete-list

    .action-bar
        .items
            +ActionLink('grading', "summaryGrid", selectedId).pressed=Msg.Item(true)
            +ActionLink('grading', "standardsGrid", selectedId)=Msg.Standard(true)
            +ActionLink('grading', "finalGrades", selectedId)=Msg.Final_Grade(true)
            if self.isLEIntegrated() && self.isHasAccessToLE()
                +ActionLink('teachers', 'giveLECredits', selectedId) Open Learning Earnings
    .buttons-group
        +ActionButton('grading', 'summary', selectedId).boxes=Msg.Box(true)
        +ActionButton('grading', 'summaryGrid', selectedId).grid.pressed=Msg.Grid

    .mps-container
        #codes-popup.popup-bubble.bottom.centered.codes.new-style
            .pop-up-triangle
            .pop-up-triangle
            .codes-content
        .popup-bubble.bottom.comment.centered
            .pop-up-triangle
            div
                h5=Msg.Add_comment
                .text-container
                    textarea(maxlength=500).comment-value
                    .grading-comments-list
                .buttons-bottom
                    if self.isAbleEdit()
                        BUTTON.blue-button.small.add-comment=Msg.Add
                    BUTTON.grey-button.small.cancel-comment=Msg.Cancel
        each gradingPeriod,i in self.getGradingPeriods()
            -var item = self.getCurrentGradingGrid()
            -var selectedGradingPeriodId = item.getGradingPeriod().getId()
            .chlk-calendar.marking-period-container(
                class=((gradingPeriod.getId() == selectedGradingPeriodId) ? "open " : "") + ((!item.getGradingItems().length || !item.getStudents().length) ? 'no-items' : ''),
                data-index=i
            )
                .header.mp-title
                    -var mpName = gradingPeriod.getName()
                    span(
                        data-tooltip=gradingPeriod.getId() == selectedGradingPeriodId ? item.getTooltipText() : ''
                    ).mp-name=mpName

                    .collapse
                .mp-data(data-grading-period-id=gradingPeriod.getId())
                    .buttons-row
                        .grading-selects
                            +ActionForm('grading', 'loadGradingPeriodGridSummary').load-grading-period
                                +Hidden('autoUpdate', false).auto-update
                                +Hidden('avg', false).avg-value
                                +Hidden('classId', selectedId)
                                +Hidden('notCalculateGrid', false).not-calculate-grid
                                +Hidden('gradingPeriodId', gradingPeriod.getId().valueOf())
                                +Select('standardId')(data-placeholder=Msg.All_standards).standards-select.grading-select
                                    +Option('', Msg.All_standards , true)
                                    each item in self.getStandards()
                                        +Option(item.getStandardId().valueOf(), item.getName() , false)
                                +Select('categoryId')(data-placeholder=Msg.All_categories).categories-select.grading-select
                                    +Option('', Msg.All_categories , true)
                                    each item in self.getClassAnnouncementTypes()
                                        +Option(item.getId(), item.getName() , false)
                        .arrows-row
                            .prev-arrow.grid-arrow
                            .next-arrow.grid-arrow
                        +ActionButton('grading', 'getGradeComments').blue-button.button-like.comment-button.gp-button=Msg.Comment
                        +ActionButton('grading', 'getGradeComments').blue-button.button-like.codes-button.gp-button=Msg.Code(true)
                    .grades-container
                        if gradingPeriod.getId() == selectedGradingPeriodId
                            +RenderWith(item, chlk.templates.grading.ShortGradingClassSummaryGridItemsTpl)(
                                classId = selectedId
                            )