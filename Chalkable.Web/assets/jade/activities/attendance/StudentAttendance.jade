valuesEnum = chlk.models.attendance.AttendanceTypeEnum;
value = self.getType();
level = self.getLevel();
-reasons = self.getAttendanceReasonsByType(value)
needDropdown = (value > valuesEnum.PRESENT.valueOf()) && reasons.length;
reason = needDropdown ? self.getAttendanceReason() : '';
name = self.getTypeName();
student = self.getStudent();
        //+ActionForm('attendance', 'setAttendance')(class= self.isNeedPresent && self.isNeedPresent() ? 'need-present' : '').student-attendance-form
div(
    name="attendance",
    data-person-id=self.getStudent().getId().valueOf(),
    data-type=value,
    data-level=level,
    data-reason-id=reason && reason.getId().valueOf()
)(class= self.isNeedPresent && self.isNeedPresent() ? 'need-present' : '').student-attendance-form
    //+Hidden('type', value)
    //+Hidden('classid', self.getClassId().valueOf())
    //+Hidden('studentid', self.getStudent().getId().valueOf())
    //+Hidden('attendancereasonid', reason && reason.getId().valueOf())
    //+Hidden('date', self.getDate().toStandardFormat())
    //+Hidden('attendanceReasonDescription', reason && reason.getDescription())
    .attendance-option
        =(reason ? reason.getDescription() : '')
    div(data-tooltip=name, class=name.toLowerCase().replace(/\//g, '-')).attendance-text
        =(value == valuesEnum.NA.valueOf() ? '_______' : name)
    .attendance-combo.buttons
        .buttons-group
            BUTTON(href="javascript:", type="button", value="leftArrow").left-arrow &lt;
            .button-like(class=needDropdown ? "with-dropdown" : '').current-attendance=name
            BUTTON(href="javascript:", type="button", value="rightArrow").right-arrow &gt;
        if value > valuesEnum.PRESENT.valueOf()
            .combo-list.no-row-click.popup-bubble.top
                input.combo-input.x-zero
                .connector
                firstSelected = true
                .combo-list-container
                    div(class=(firstSelected ? "selected " : "") + name.toLowerCase()).option.item
                        .student-seating-type
                        .text=name
                    each reasonItem in reasons
                        div(
                            data-id=reasonItem.getId().valueOf(),
                            data-level=reasonItem.getLevel(value),
                            class=name.toLowerCase()
                        ).option.item
                            .student-seating-type
                            .text(
                                data-tooltip-type="overflow",
                                data-tooltip=reasonItem.getDescription()
                            )=reasonItem.getDescription()
                    .x-hidden.press-enter=Msg.Press_enter
