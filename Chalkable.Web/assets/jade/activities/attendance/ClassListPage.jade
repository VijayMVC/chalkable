mixin SummaryInfo(presentCount, allStudentsCount)
    -presentPersent = Math.round((presentCount * 100) / allStudentsCount)
    .summary-info
        .title= presentCount + '/' + allStudentsCount + ' ' + Msg.Present
        .slide-bar
            div(style="width: " + presentPersent + "%").inner-bar

h2.page-title Attendance

-var topData = self.getTopData()
-var topItems = topData.getTopItems()
-var selectedId = topData.getSelectedItemId()
-var valuesEnum = chlk.models.attendance.AttendanceTypeEnum
-var additionalParams = self.getAdditionalParams()

.action-bar
    .items
        +ActionLink('attendance', 'classList', selectedId, self.getDate().toStandardFormat()).pressed=Msg.List
        +ActionLink('attendance', 'seatingChart', selectedId, self.getDate().toStandardFormat())=Msg.Seating_Chart
.loader
.students-list.loader-container
    if(self.hasLeftRightToolBar())
        +LeftRightToolbar(topItems, chlk.templates.attendance.TopBar, 'attendance', 'classListFromBar', [self.getDate().format('mm-dd-yy')])(
            selectedItemId=selectedId ? selectedId.valueOf() : "",
            disabledClass = 'x-hidden'
        ).classes-bar
    if self.getItems().length == 0
        .people-list-container
            .header
                .table
                    .title
                        = self.getDate().toString('MM dd, yy')
                        +DatePicker('attendanceDate', self.getDate())(
                            data-options={
                                showOtherMonths: true,
                                selectOtherMonths: true
                            },
                            data-controller= "attendance",
                            data-action="classList",
                            data-params=selectedId ? [selectedId.valueOf()].concat(additionalParams) : null
                        )#attendance-date.tb-date-picker.tr
            .grid-container.people-list
                .black-arrow.no-class-scheduled.row=Msg.No_class_scheduled(self.getDate().format('mm/dd/yy')) + ' or no students in this class'
    if self.getItems().length > 0
        .people-list-container.not-transparent
            .saved-pop-up
            .not-saved-pop-up
            +ActionForm('attendance', 'setClassAttendanceList').set-attendance-list-form.header
                input(name="attendancesJson", type="hidden")
                +Hidden('date', self.getDate().toStandardFormat())
                +Hidden('classList', true)
                +Hidden('classId', selectedId && selectedId.valueOf())
                items = self.getItems()
                .table
                    .l: +SummaryInfo(self.getPresentStudents().length, items.length)
                    if self.getItems().length > 0 && self.canPost()
                        .l &nbsp;
                    .title
                        = self.getDate().toString('MM dd, yy')
                        +DatePicker('attendanceDate', self.getDate())#attendance-date.tb-date-picker.tr(
                            data-options={
                                showOtherMonths: true,
                                selectOtherMonths: true,
                                inCurrentMp: true
                            },
                            data-controller= "attendance",
                            data-action="classList",
                            data-params=selectedId ? [selectedId.valueOf()].concat(additionalParams) : null
                        )
                    if self.getItems().length > 0 && self.canPost()
                        .r
                            +ActionLinkWithPrepend('attendance', 'markAll',
                            [selectedId.valueOf(), self.getDate().toStandardFormat()].concat(additionalParams)
                            )#all-present-link=Msg.Mark_all_Present
                    .r
                        if self.canPost()
                            BUTTON#submit-attendance-button.blue-button POST IT
                        else if self.getReadOnlyReason()
                            div=self.getReadOnlyReason()
                .action-bar.buttons.filter.x-hidden
                    .container.panel-bg
                        .left
                            +ActionLinkWithPrepend('attendance', 'sortStudents', ['false'].concat(additionalParams))(class=self.isByLastName()?"":"pressed").action-button.first-last=Msg.First_name
                            +ActionLinkWithPrepend('attendance', 'sortStudents', [true].concat(additionalParams))(class=self.isByLastName()?"pressed":"").action-button.first-last=Msg.Last_name
            .grid-container.loader-container
                +ListView(self.getItems())#class-attendance-list-panel.people-list
                    needSuggestion = self.getItems().filter(function(item){return item.getType() > valuesEnum.NA.valueOf()}).length == 0;
                    each item, i in self.getItems()
                        needPresent = (i == 0 && item.getType() == valuesEnum.NA.valueOf());
                        .row(index=i)
                            .student-attendance-container.right
                                len = self.getItems().length;
                                if (needSuggestion && (i== 5 || (i == len - 1 && len < 6 && len > 2)))
                                    .keyboard-suggestion
                                div(class="container-" + item.getStudentId().valueOf())
                                    -item.setReasons(self.getReasons());
                                    +RenderWith(item, self.getItemClassType())(
                                        needPresent = needPresent
                                    )
                            if needPresent
                                -item.setType(valuesEnum.PRESENT.valueOf());
                            student = item.getStudent();
                            +ProfileLink(student, 'student').left.image-container.white.shadow
                                +PersonImg(student, 47)
                            .user-name-container.i-b.relative
                                SPAN.name=student.getFullName()
                                if student.isWithdrawn()
                                    div(data-tooltip=Msg.Withdrawn).withdrawn
                                if item.isAbsentPreviousDay()
                                    SPAN(data-tooltip=Msg.Absent_yesterday).absent-yesterday
                            .clear-fix