mixin AppAttachmentBlock(item, pictureHref, i)
    +LoadingImage(src=pictureHref, id="loading-image-" + i)
        .title
            div=item.getName()


mixin AnnouncementTooltip()
    div(attributes).announcement-view-tooltip
        .comment-container
            block
        .comment-triangle
            .white.comment-triangle

mixin Glue_()
    =[].slice.call(arguments).filter(function (_) { return !/^\s*$/.test(_||'') }).join(' - ')

.announcement-view.not-transparent
    -var isAdminAnnouncement = self.getAnnouncementTypeId() == chlk.models.announcement.AnnouncementTypeEnum.ADMIN.valueOf()
    -var isReadonly = !self.isAbleToGrade()
    -var studentAnnouncements = false
    -var studentAnnouncementsInfo = self.getStudentAnnouncements()
    -var applications = self.getApplications()
    -var gradeViewApps = self.getGradeViewApps()
    -var grade = self.getGrade()
    -var hasGrade = self.isDropped() || grade || grade == 0
    if studentAnnouncementsInfo
        studentAnnouncements = studentAnnouncementsInfo.getItems()

    .buttons
        if !self.getUserRole().isStudent()
            +ActionButton('announcement', 'edit', self.getId())(class = self.isAbleEdit() ? "" : "disabled").right Edit
        +ActionButton('feed', 'doToList').back-button Back
        .clear-fix

    h2.page-title: +Glue_(self.getAnnouncementTypeName() + (isAdminAnnouncement ? ' ' + Msg.Announcement : ''), self.getClassName())
    .announcement-details-panel
        .details-container.silver-panel
            if self.getUserRole().isStudent() && hasGrade
                +AnnouncementTooltip().comment-grade-container
                    div(
                        data-tooltip = self.getComment(),
                        data-tooltip-type = "overflow",
                        data-tooltip-class = "wide"
                    ).comment=self.getComment() || Msg.Your_grade + ":"
                    .grade-value= self.isDropped() ? Msg.Dropped : (grade || grade == 0 ? grade : '')
            if self.getUserRole().isTeacher() && self.isHiddenFromStudents()
                +AnnouncementTooltip().make-visible-container
                    .comment This item is hidden from students.
                    +ActionLink('announcement', 'makeVisible', self.getId()).make-visible-btn Make visible
            br
            .table
                .avatar-block-left
                    if self.getOwner()
                        if self.getUserRole().isStudent()
                            a(data-tooltip=self.getOwner().getFullName(),
                            ).image-container
                                +PersonImg(self.getOwner(), 47)
                        else
                            +ProfileLink(self.getOwner(), 'teacher')(
                                data-tooltip=self.getOwner().getFullName(),
                            ).image-container
                                +PersonImg(self.getOwner(), 47)
                .description
                    .chat-bubble
                        h2(class=self.getExpiresDateColor())=self.getExpiresDateText()
                        p: +Glue_(self.getTitle(), self.getContent())

                        if self.getStandards() && self.getStandards().length > 0
                            .standards-container
                                .title Standards:
                                .standard-list
                                    each standard in self.getStandards()
                                        button(data-tooltip = standard.getDescription()).same-on-hover= standard.getName()
                                        = ' '

        -var attachments = self.getAnnouncementAttachments() || []
        -var applications = self.getApplications() || []
        if attachments.length + applications.length
            .close-open-control
                h3 Apps
                .content.attachments-and-applications
                    +RenderWith(self.getModel(), chlk.templates.announcement.Announcement)(
                        userRole = self.getUserRole()
                    )

        if self.getUserRole().isStudent()
            .silver-panel.attachments-panel
                .left-block.attachments
                .right-block
                    .student-attachments
                        +RenderWith(self.getModel(), chlk.templates.announcement.AnnouncementForStudentAttachments)(
                            userRole = self.getUserRole()
                        )

        +RenderWith(self.getModel(), chlk.templates.announcement.AnnouncementQnAs)(
            userRole = self.getUserRole()
        )

        if !self.getUserRole().isStudent() && studentAnnouncements && studentAnnouncements.length && self.isGradable()
            .close-open-control
                h3 Grades

            div(class=self.getApplicationsCount() ? "" : "no-applications").grading-part
                +Hidden('maxScore', self.getMaxScore())#max-score
                +RenderWith(studentAnnouncementsInfo, chlk.templates.announcement.AnnouncementGradingPartTpl)(
                    autoGradeApps = self.getAutoGradeApps(),
                    readonly = isReadonly,
                    gradeViewApps = self.getGradeViewApps(),
                    applications = self.getApplications(),
                    userRole = self.getUserRole(),
                    owner = self.getOwner(),
                    announcementId = self.getId(),
                    maxScore = self.getMaxScore(),
                    ableDropStudentScore = self.isAbleDropStudentScore(),
                    ableToExempt = self.isAbleToExempt(),
                    gradable = self.isGradable()
                )