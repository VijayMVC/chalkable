normalValue = self.getNormalValue()
itemCls = (self.isDropped() || self.isAutomaticalyDropped() ? 'dropped' :'')
-console.log(self.isDropped())
-console.log(itemCls)

selectedCls = (!self.isReadonly() ? 'not-selected' : '')
maxScore = self.getMaxScore()
div(class=self.getModel().getAlertClass(maxScore, true), data-tooltip=self.getModel().getTooltipText(maxScore, true)).alert-flag
div(class=selectedCls + ' ' + itemCls).i-b.text-value=(!normalValue && self.isAutomaticalyDropped() ? Msg.Dropped : normalValue)
div(class="selected " + itemCls, rowIndex=self.getRowIndex(), recId=self.getId()).i-b
    if !self.isReadonly()
        .input-container
            INPUT(
                type="text",
                autofill="off",
                autocomplete="off",
                value=normalValue,
                name="gradevalue",
                data-value=normalValue,
                class=self.getGradeInputClass()
                data-grade-value=self.getGradeValue(),
                data-id=self.getId().valueOf(),
                data-only-zero-score=(!!self.isAblePutOnlyZero()).toString()
            ).no-padding.grade-input.grade-autocomplete.grey-input.with-grid-focus.select-text
            .letters 0 - #{self.getMaxScore()}
            if !self.isAblePutOnlyZero()
                .grading-input-popup.chlk-pop-up-container.popup-bottom.popup-bubble.top
                    id = self.getServerDate().getTime()
                    if self.isAutomaticalyDropped()
                        +LabeledCheckbox('Automatically Dropped', 'autoDropped', true, true).with-value.auto-dropped-checkbox.main-check
                    if self.isAbleDropStudentScore() || self.isDropped()
                        +LabeledCheckbox(Msg.Drop, 'dropped', self.isDropped())(data-value=self.isDropped(), id='dropped-' + id, class = self.isAbleDropStudentScore() ? '' : 'cant-drop').with-value.dropped-checkbox
                    else
                        if self.isDropped()
                            +LabeledCheckbox("Undrop", 'undropped', !self.isDropped())(data-value=!self.isDropped(), id='undropped-' + id).with-value.undropped-checkbox
                        +Hidden('dropped', false)
                    +Hidden('isabsent', self.isAbsent())
                    +LabeledCheckbox(Msg.Late, 'islate', self.isLate())(data-value=self.isLate(), id='islate-' + id).with-value
                    +LabeledCheckbox(Msg.Incomplete, 'isincomplete', self.isIncomplete())(data-value=self.isIncomplete(), id='isincomplete-' + id).with-value
                    if self.isAbleToExempt()
                        +LabeledCheckbox(Msg.Exempt, 'isexempt', self.isExempt())(data-value=self.isExempt(), id='isexempt-' + id).with-value.exempt-checkbox

                    else
                        +Hidden('isexempt', self.isExempt())
                    +LabeledCheckbox(Msg.Fill, 'fill', false, (self.getGradeValue() === "" || self.getGradeValue() === null))(readonly, containerClass = "fill-grade-container").fill-grade
            else
                +Hidden('dropped', false)