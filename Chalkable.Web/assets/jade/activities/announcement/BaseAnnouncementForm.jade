//TODO refactor
mixin BaseAnnouncementFormContainer(self, announcement, classId, adminRecipientId, adminRecipients, userRole, classScheduleDateRanges)
    +Hidden('id', announcement.getId().valueOf())
    +Hidden('announcementtypeid', announcement.getAnnouncementTypeId())#announcement-type-id
    +Hidden('statetyped', announcement.getStateTyped())
    +Hidden('systemtype', announcement.getSystemType())
    +Hidden('personid', announcement.getPersonId().valueOf())
    +Hidden('markingperiodid', announcement.getCreated())
    +Hidden('state', announcement.getState())
    +Hidden('isedit', !!announcement.getState())(data-isedit = !!announcement.getState()).is-edit
    +Hidden('classid', classId)
    +Hidden('order', announcement.getOrder()).order-value
    +Hidden('announcementtypename', announcement.getAnnouncementTypeName())
    +Hidden('groupIds', announcement.getRecipients() && announcement.getRecipients().map(function(item){return item.getGroupId()}).join(',')).group-ids

    //+AnnouncementFormDescriptionBlock(announcement)
    typesEnum = chlk.models.announcement.AnnouncementTypeEnum

    -var isAnnouncement = announcement.isStandartAnnouncement()
    -var disableDeleteBtn = !!(announcement.getGradingStudentsCount() && announcement.getGradingStudentsCount() > 0)
    -var standards = announcement.getStandards() || []
    -var isAdmin = userRole.isAdmin()

    +ActionLink('announcement', 'showTitlePopUp')#show-title-popup.x-hidden
    div(class=announcement.getExpiresDate() ? 'with-date' : '').title-block-container
        if isAdmin
            .title-block
                INPUT(type="text", name="title", placeholder="Title", value=announcement.getTitle(), autocomplete="off", maxlength="30", class='validate[required]')#admin-title
        else
            +RenderWith(announcement.getTitleModel(), chlk.templates.announcement.AnnouncementTitleTpl)
    -var needStandardsBlock = !isAdmin && (standards.length > 0 || announcement.isCanAddStandard())
    .table
        .left-block(class=needStandardsBlock ? 'with-standards' : '')
            .left-block-container
                if isAdmin
                    -var recipients = announcement.getRecipients() || []
                    .add-recipients-container
                        .add-recipients
                            .recipients-list
                                +RenderWith(announcement, chlk.templates.announcement.AdminAnnouncementRecipientsTpl)(
                                    userRole = userRole
                                    studyCenterEnabled = self.isStudyCenterEnabled()
                                )
                            .title=recipients.length > 0 ? Msg.Click_to_add_more : 'Click to add group'
                            +ActionLink('announcement', 'showGroups', announcement.getId()).add-recipients-btn.x-hidden
                +TextArea(name="content", placeholder=isAnnouncement ? "Message" : "Assignment")= announcement.getContent()
                if needStandardsBlock
                    .add-standards-container
                        .add-standards
                            .standards-list
                                +RenderWith(self.prepareStandardsListData(), chlk.templates.standard.AnnouncementStandardsTpl)(
                                    userRole = userRole
                                    studyCenterEnabled = self.isStudyCenterEnabled()
                                    ableToRemoveStandard=announcement.isAbleToRemoveStandard())
                            if announcement.isCanAddStandard()
                                .title=standards.length > 0 ? Msg.Click_to_add_more : Msg.Click_to_add_standard
                                +ActionLink('announcement', announcement.getState() ? 'showStandards' : 'showStandardsOnCreate', announcement.getAnnouncementTypeName(), announcement.getId(), classId).add-standards-btn.x-hidden
                if !isAdmin
                    .drawer-icon
            if !isAdmin
                .drop-down-container.popup-bubble.top
                input(type="submit",id="list-last-button",value="listLast", name="submitType", class='x-hidden validate-skip')
            if !announcement.getState()
                input(type="submit",id="save-form-button",value="saveNoUpdate", name="submitType", class='x-hidden validate-skip')
        .right-block
            .date-picker-container
                label(for="expiresdate") Due Date
                +DatePicker('expiresdate', announcement.getExpiresDate())(
                    data-options={
                        showOtherMonths: true,
                        selectOtherMonths: true,
                        dateRanges: classScheduleDateRanges
                    },
                    data-value=announcement.getExpiresDate() ? announcement.getExpiresDate().format('mm/dd/yy') : ''
                    placeholder=Msg.Due_date,
                    class='validate[required]'
                )#expiresdate
                .calendar-mark ?
            if !isAdmin
                .max-score-container
                    label(for="ann-max-score") Max Score
                    input#ann-max-score(type="text", name="maxscore", placeholder=Msg.Max_score + ' 100', class="validate[custom[number],min[0]]", value=announcement.isGradable() ? announcement.getMaxScore() : '0')
                    .question-mark(data-tooltip=Msg.Max_Score_Tooltip_Message) ?
                .advanced-options
                    A.advanced-options-btn(href="javascript:;")= Msg.Advanced_options
                    .separator.x-hidden
                    .advanced-options-container.x-hidden.popup-bubble.top
                        .weight-multiplier.new-input-container
                            label(for="ann-weightmultiplier")= Msg.Weight_Multiplier
                            input#ann-weightmultiplier(type="text", name='weightmultiplier', class="validate[required,custom[double],min[0]]", placeholder="1.00", value=announcement.getWeightMultiplier() || 1.00)
                            .question-mark(data-tooltip=Msg.Weight_Multiplier_Tooltip_Message) ?
                        .weight-addition.new-input-container
                            label(for="ann-weightaddition")=Msg.Weight_Addition
                            input#ann-weightaddition(type="text", name='weightaddition', class="validate[required,custom[double],min[0]]", placeholder="0.00", value=announcement.getWeightAddition() || 0.00)
                            .question-mark(data-tooltip=Msg.Weight_Addition_Tooltip_Message) ?
                        .check-box-container
                            label(for="ann-hidefromstudents")=Msg.Hide_from_Students
                            +SlideCheckbox('hidefromstudents', announcement.isHiddenFromStudents(), false)
                            .question-mark(data-tooltip=Msg.Hide_From_Student_Tooltip_Message) ?
                        .check-box-container
                            label(for="ann-candropstudentscore")=Msg.Can_drop_student_score
                            +SlideCheckbox('candropstudentscore', announcement.isAbleDropStudentScore(), false)
                            .question-mark(data-tooltip=Msg.Can_Drop_Student_Score_Tooltip_Message) ?

    .apps-attachments-bock.attachments-and-applications
        ann = announcement
        -ann.setNeedButtons(true)
        -ann.setNeedDeleteButton(true)
            +RenderWith(ann, chlk.templates.announcement.Announcement)(
                userRole = userRole,
                studyCenterEnabled = self.isStudyCenterEnabled()
            )
    if !isAdmin
        .suggested-apps
            if announcement.getStandards() && announcement.getStandards().length > 0 && self.isStudyCenterEnabled()
                +RenderWith(self.prepareSuggestedAppListData(), chlk.templates.apps.SuggestedAppsListTpl)
    .bottom-block
        +Button()(
            type="submit",
            name="submitType",
            value=announcement.getState() ? "submitOnEdit" : "submit"
        ).special-button.blue-button.submit-btn.submit-announcement.big-button
            =(announcement.getState() ? Msg.Save : Msg.Submit)
        if announcement.getState()
            +ActionLink('announcement', 'delete', announcement.getId(), announcement.getAnnouncementTypeName())(
                disabled=disableDeleteBtn
            )
                +Button()(
                    type="button",
                    data-tooltip = disableDeleteBtn ? Msg.Delete_announcement_btn_tooltip : '',
                    class=disableDeleteBtn ? 'disabled' : ''
                ).special-button.red-button.big-button.submit-btn.add-loader-btn.negative-button= Msg.Delete
        else
            +ActionLink('announcement', 'discard').grey-link.not-blue.add-loader-btn=Msg.Discard
